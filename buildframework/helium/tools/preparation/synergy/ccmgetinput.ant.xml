<?xml version="1.0" encoding="UTF-8"?>
<!-- 
============================================================================ 
Name        : ccmgetinput.ant.xml 
Part of     : Helium 

Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
All rights reserved.
This component and the accompanying materials are made available
under the terms of the License "Eclipse Public License v1.0"
which accompanies this distribution, and is available
at the URL "http://www.eclipse.org/legal/epl-v10.html".

Initial Contributors:
Nokia Corporation - initial contribution.

Contributors:

Description:

============================================================================
-->
<!--* @package preparation -->
<project name="ccmgetinput" xmlns:hlm="http://www.nokia.com/helium">
    <description>
      Retrieves content from Synergy
    </description>
    
    <!--* @property ccm.home.dir
    Home directory of CCM operations.
    @type string
    @editable required
    @scope public
    -->

    <!--* @property ccm.database
    Name of the CCM database to use. No default value.
    @type string
    @editable required
    @scope public
    -->

    <!--* @property ccm.engine.host
    Engine host of CCM database. No default value.
    @type string
    @editable required
    @scope public
    -->
    
    <!--* @property prep.delivery.file
    Defines configuration file used in synergy operations (ccm-get-input for example). This file contains definition of projects that are checkouted or snapshotted.
    @type string
    @editable required
    @scope public
    -->
        
    <!-- This target uses an XML input file to retrieve content from Synergy.
      -->
    <target name="prep-work-area" depends="log-build-start" if="internal.ccm.enabled">
        <hlm:tempRecordStartMacro name="${build.id}_ccm_get_input.log" />
        <runtarget target="get-ccm-password"/>
        <runtarget target="ccm-prepare-input"/>
        
        <hlm:assertPropertySet property="prep.delivery.file" message="Property prep.delivery.file is not defined." />
        <trycatch>
            <try>
                <hlm:python failonerror="true">
import preparation
import configuration
import traceback
import logging            
import ant
import sys
import os.path

# enabling logging
logging.basicConfig(level=logging.INFO)

configBuilder = configuration.NestedConfigurationBuilder(open(ant.get_property(r'${prep.delivery.conf.parsed}'), 'r'))
configSet = configBuilder.getConfiguration()
password = ant.get_property(r'${ccm.user.password}')
builder = preparation.PreparationBuilder(configSet.getConfigurations(), ant.get_property(r'${ccm.user.login}'), password, cache=ant.get_property(r'${ccm.cache.xml}'))
try:
    builder.check()
    builder.get_content()
finally:
    builder.close()
                </hlm:python>
            </try>
            <finally>
                <hlm:tempRecordStopMacro name="${build.id}_ccm_get_input.log" filterref="filterset.prepWorkArea" phase="prep"/>
                <hlm:assertFileExists file="${build.cache.log.dir}/${build.id}_ccm_get_input.log" />
            </finally>
        </trycatch>
    </target>

    
    <!--
     This target will cleanup all snapshoted/checkout project from the disk. Checked out project will
     also be deleted from the synergy database. 
     -->
    <target name="cleanup-work-area" if="internal.ccm.enabled">
        <hlm:tempRecordStartMacro name="${build.id}_cleanup_work_area.log" />
        <runtarget target="get-ccm-password"/>
        <runtarget target="ccm-prepare-input"/>
        
        <hlm:assertPropertySet property="prep.delivery.file" message="Property prep.delivery.file is not defined." />
        <trycatch>
            <try>
                <hlm:python failonerror="true">
import preparation
import configuration
import traceback
import logging            
import ant
import sys
import os.path

# enabling logging
logging.basicConfig(level=logging.INFO)

configBuilder = configuration.NestedConfigurationBuilder(open(ant.get_property(r'${prep.delivery.conf.parsed}'), 'r'))
configSet = configBuilder.getConfiguration()
password = ant.get_property(r'${ccm.user.password}')
builder = preparation.PreparationBuilder(configSet.getConfigurations(), ant.get_property(r'${ccm.user.login}'), password, cache=ant.get_property(r'${ccm.cache.xml}'))
try:
    builder.cleanup()
finally:
    builder.close()
                </hlm:python>
            </try>
            <finally>
                <hlm:tempRecordStopMacro name="${build.id}_cleanup_work_area.log" filterref="filterset.prepWorkArea" phase="prep"/>
                <hlm:assertFileExists file="${build.cache.log.dir}/${build.id}_cleanup_work_area.log" />
            </finally>
        </trycatch>
    </target>
    
</project>
