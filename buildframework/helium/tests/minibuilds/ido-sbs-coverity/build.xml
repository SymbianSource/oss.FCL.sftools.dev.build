<?xml version="1.0" encoding="UTF-8"?>
<!-- 
============================================================================ 
Name        : 
Part of     : Helium 

Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
All rights reserved.
This component and the accompanying materials are made available
under the terms of the License "Eclipse Public License v1.0"
which accompanies this distribution, and is available
at the URL "http://www.eclipse.org/legal/epl-v10.html".

Initial Contributors:
Nokia Corporation - initial contribution.

Contributors:

Description:

============================================================================
-->
<project name="minibuild.ido-sbs-coverity" default="help" xmlns:au="org.apache.ant.antunit" xmlns:hlm="http://www.nokia.com/helium" basedir="..\ido">
    <property environment="env"/>
    <!--property name="config.temp.build.dir" location="${ant.file.minibuild.ido-sbs}/../build"/ -->
    
    <!-- Configuring raptor build system -->
    <property name="build.system" value="sbs"/>
    
    <!-- Configuring get latest env. -->
    <property name="s60.grace.service" value="s60_devices_sw" />
    <property name="s60.grace.product" value="DFS7x.92" />
    <property name="s60.grace.release" value="92_\d{6}_hw79" />
    
    <property name="sysdef3.enabled" value="true" />
    <property name="codescanner.enabled" value="false" />
    
    <!-- enable coverity -->
    <property name="coverity.commit.defects.enabled" value="true"/>
    <property name="coverity.defect.manager.server" value="ousrv057.europe.nokia.com"/>
    <property name="coverity.defect.manager.port" value="5467"/>
    <property name="coverity.defect.manager.product" value="S60-92-Vasko"/>
    
    <property name="publish.ccm.folder" value="bh1test#310" />
    
    <dirname property="ido.sbs.coverity.dir" file="${ant.file.minibuild.ido-sbs-coverity}"/>
    <property name="prep.delivery.file" location="${ido.sbs.coverity.dir}/delivery.xml" />
    
    <!-- Run the full sequence of target for the minibuild. ,minibuild-prep,compile-main,zip-ee,minibuild-check-->
    <!--<target name="do-minibuild" depends="minibuild-cleanup,
                                            compile-main"/>-->

    <property name="build.name" value="minibuild_ido_sbs_coverity" />
    <property name="build.family" value="test_minibuild_ido_sbs_coverity" />
    
    <property name="sfvalidate.enabled" value="true" />
    
    <target name="minibuild-check">
        <!-- Check if prep has set some prop correctly... -->
        <echo>'${arm.compiler.version}'</echo>
        <au:assertMatches string="${arm.compiler.version}" pattern="RVCT2\.2 \[Build 686\]" casesensitive="false" multiline="true"/>

        <!-- Check if compile-main step did what expected... -->
        <au:assertFileExists file="${canonical.sysdef.file}"/>
        <if>
            <istrue value="${blocks.enabled}" />
            <then>
                <au:assertFileExists file="${blocks.config.dir}/minibuild_helloworldapi.blocks_component.xml" />
                <au:assertFileExists file="${blocks.config.dir}/minibuild_helloworldcons.blocks_component.xml" />
            </then>
        </if>
    </target>
    
    <!-- Preparing the content on top of the env -->
    <target name="ido-50-build" depends="ido-build-prep,compile-main-source,build-log-summary,render-internal-exports,
                                         update-policy-src-reference,render-validate-policy,check-sf-source-header,
                                         ido-codescanner,ido-check-sf-source-header,iad-check-pkg-version,ats-test,publish-tasks-to-folder,
                                         ido-sources-to-s60-build-robot,check-epl-errors" />
    
    <target name="ido-build-prep" depends="ido-configure-prep,init,log-build-env,set-arm-version,check-free-space,
                                               diamonds,do-prep-work-area,ido-prep-clean-source,ido-prep-copy,create-bom" />
    
    <target name="ido-prep-clean-source">
        <antcall target="ido-prep-clean">
           <param name="enabled.coverity" value="false"/>
        </antcall>
    </target>
    
    <target name="compile-main-source">
        <antcall target="compile-main">
           <param name="coverity.enabled" value="true"/>
        </antcall>
    </target>
    

    <import file="../ido/build.xml"/>
    <import file="build.sbsinput.ant.xml" />
    
    <hlm:signalInput id="EPLLicenseSignalInput" failbuild="never">
        <hlm:notifierListRef refid="defaultFailNotifier" />
    </hlm:signalInput>
    
    <target name="check-epl-errors">
        <loadfile property="epl.errors" srcFile="${sf.check.source.log}"/>
        <au:assertMatches string="${epl.errors}"
            pattern="ERROR: EPL license header not found:"
            message="EPL validation is not done."
            multiline="true"
        />
    </target>
</project>

    